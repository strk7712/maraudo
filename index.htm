<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>マロウドインシフト希望ツール</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* 紫を基調としたスタイル */
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 20px;
            line-height: 1.6;
            background-color: #f8f5f7;
            color: #4b0082;
        }

        h1, h2 {
            text-align: center;
            color: #6a0dad;
            font-weight: bold;
        }

        .container {
            max-width: 600px;
            margin: 0 auto;
            background-color: #ffffff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            padding: 20px;
        }

        label {
            display: block;
            margin-top: 15px;
            font-size: 1.1em;
            color: #4b0082;
        }

        input[type="number"],
        input[type="text"] {
            width: 100%;
            padding: 10px;
            font-size: 1.1em;
            margin-top: 5px;
            border: 1px solid #cccccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        button {
            width: 100%;
            padding: 15px;
            font-size: 1.2em;
            margin-top: 20px;
            background-color: #8a2be2;
            color: #ffffff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #5a189a;
        }

        #imageContainer {
            max-width: 600px;
            margin: 20px auto;
            text-align: center;
        }

        #imageInstructions {
            font-size: 1em;
            margin-bottom: 15px;
            color: #4b0082;
        }

        /* 修正: Canvasではなくimgタグにスタイルを適用 */
        #imageResult img {
            width: 100%;
            height: auto;
            border: 1px solid #cccccc;
            border-radius: 5px;
        }

        /* メディアクエリでフォントサイズを調整 */
        @media (max-width: 600px) {
            body {
                padding: 10px;
            }
            label, input, button {
                font-size: 1em;
            }
            h1, h2 {
                font-size: 1.5em;
            }
        }

        /* 結果表示用のスタイルを追加 */
        #results {
            padding: 20px;
            background-color: #ffffff;
            border-radius: 10px;
            color: #4b0082;
        }

        #results h2 {
            text-align: center;
            color: #6a0dad;
            font-weight: bold;
        }

        /* ここに以下のスタイルを追加 */
        #results h2:first-of-type {
            margin-top: 30px; /* 余白の大きさはお好みで調整してください */
        }

        .table-container {
            margin: 20px 0;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        table th, table td {
            border: 1px solid #cccccc;
            padding: 10px;
            text-align: center;
            font-size: 1em;
        }

        table th {
            background-color: #e0d7ec;
            color: #4b0082;
        }

        table tr:nth-child(even) {
            background-color: #f9f5fb;
        }

    </style>
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
</head>
<body>
    <h1>マロウドインシフト希望ツール</h1>
    <div class="container">
        <label for="year">希望する年度を数字で入力してください（例：2024）</label>
        <input type="number" id="year" min="2000" max="2100" placeholder="2023">
        
        <label for="month">希望する月を数字で入力してください（例：12/16以降の場合は12）</label>
        <input type="number" id="month" min="1" max="12" placeholder="11">
        
        <label for="offDates">休みたい日の日付を入力してください（例：16,30,1,2）</label>
        <input type="text" id="offDates" placeholder="例：20,22,25,1,5">
        
        <button id="generateImageButton">画像を生成</button>
    </div>
    <div id="imageContainer">
        <h2>画像を保存するには以下を長押ししてください</h2>
        <div id="imageInstructions">
            スマートフォンの場合：画像を長押しして「保存」を選択してください。<br>
            PCの場合：右クリックして「名前を付けて画像を保存」を選択してください。
        </div>
        <div id="imageResult"></div>
    </div>
    
    <!-- resultsセクションをここに移動 -->
    <div id="results">
        <h2>休み希望日</h2>
        <div class="table-container">
            <table id="offDatesTable">
                <thead>
                    <tr>
                        <th>日付</th>
                        <th>曜日</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        
        <h2>出勤可能日</h2>
        <div class="table-container">
            <table id="availableDatesTable">
                <thead>
                    <tr>
                        <th>日付</th>
                        <th>曜日</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
    
    <script>
        document.getElementById('generateImageButton').addEventListener('click', function() {
            const yearInput = document.getElementById('year').value;
            const monthInput = document.getElementById('month').value;
            const offDatesInput = document.getElementById('offDates').value;

            const weekdays = ['日', '月', '火', '水', '木', '金', '土'];

            let year = parseInt(yearInput);
            let month = parseInt(monthInput);

            if (isNaN(year) || isNaN(month) || month < 1 || month > 12) {
                alert('正しい年度と月を入力してください。');
                return;
            }

            const startDay = 16;
            const endDay = 15;
            const startDate = new Date(year, month - 1, startDay);
            let nextMonth = month === 12 ? 1 : month + 1;
            let nextYear = month === 12 ? year + 1 : year;
            const endDate = new Date(nextYear, nextMonth - 1, endDay);

            // 日付リストを生成
            const dateList = [];
            let currentDate = new Date(startDate);
            while (currentDate <= endDate) {
                dateList.push(new Date(currentDate));
                currentDate.setDate(currentDate.getDate() + 1);
            }

            // 休みたい日を処理
            const dateStrings = offDatesInput.split(',');
            const offDates = [];
            for (let dateStr of dateStrings) {
                dateStr = dateStr.trim();
                if (dateStr === '') continue;
                let day = parseInt(dateStr);
                if (isNaN(day)) {
                    alert(`正しい日付を入力してください：${dateStr}`);
                    continue;
                }
                let dateAdded = false;
                for (let [y, m] of [[year, month], [nextYear, nextMonth]]) {
                    let date = new Date(y, m - 1, day);
                    // 月がずれていないか確認（存在しない日付を除外）
                    if (date.getDate() === day && date >= startDate && date <= endDate) {
                        offDates.push(date);
                        dateAdded = true;
                        break;
                    }
                }
                if (!dateAdded) {
                    alert(`指定した日付 ${day} は期間内に存在しません。`);
                }
            }

            // 重複を除去してソート
            const offDatesSet = new Set(offDates.map(d => d.getTime()));
            const offDatesSorted = Array.from(offDatesSet).sort((a, b) => a - b).map(t => new Date(t));

            // 出勤可能日を計算
            const offDatesTimeSet = new Set(offDatesSorted.map(d => d.getTime()));
            const availableDates = dateList.filter(d => !offDatesTimeSet.has(d.getTime()));

            // 結果を表示（非表示のまま）
            const resultsElement = document.getElementById('results');
            const offDatesTableBody = document.querySelector('#offDatesTable tbody');
            offDatesTableBody.innerHTML = '';
            for (let date of offDatesSorted) {
                const row = offDatesTableBody.insertRow();
                const cellDate = row.insertCell();
                const cellWeekday = row.insertCell();
                const weekday = weekdays[date.getDay()];
                cellDate.textContent = `${date.getFullYear()}-${('0' + (date.getMonth() + 1)).slice(-2)}-${('0' + date.getDate()).slice(-2)}`;
                cellWeekday.textContent = `${weekday}`;
            }

            const availableDatesTableBody = document.querySelector('#availableDatesTable tbody');
            availableDatesTableBody.innerHTML = '';
            for (let date of availableDates) {
                const row = availableDatesTableBody.insertRow();
                const cellDate = row.insertCell();
                const cellWeekday = row.insertCell();
                const weekday = weekdays[date.getDay()];
                cellDate.textContent = `${date.getFullYear()}-${('0' + (date.getMonth() + 1)).slice(-2)}-${('0' + date.getDate()).slice(-2)}`;
                cellWeekday.textContent = `${weekday}`;
            }

            // 一時的に結果セクションを表示して画像を生成
            resultsElement.style.display = 'block';
            html2canvas(resultsElement).then(canvas => {
                // Canvasを画像に変換
                const imgData = canvas.toDataURL('image/png');
                const imageContainer = document.getElementById('imageResult');
                imageContainer.innerHTML = ''; // 以前の画像を削除
                const imgElement = document.createElement('img');
                imgElement.src = imgData;
                imageContainer.appendChild(imgElement);

                // 画像生成後に再度結果セクションを非表示に
                resultsElement.style.display = 'none';
            });
        });
    </script>

</body>
</html>
